<?php

/**
 * @file
 * MailChimp eCommerce core functionality.
 */

/**
 * Implements hook_menu().
 */
function mailchimp_ecommerce_menu() {
  $items = array();

  $items['admin/config/services/mailchimp/ecommerce'] = array(
    'title' => t('eCommerce'),
    'description' => t('Configure MailChimp eCommerce.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('mailchimp_ecommerce_admin_settings'),
    'access callback' => 'mailchimp_apikey_ready_access',
    'access arguments' => array('administer mailchimp'),
    'file' => 'includes/mailchimp_ecommerce.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 20,
  );

  return $items;
}

function mailchimp_ecommerce_get_store($store_id) {
  try {
    /* @var \Mailchimp\MailchimpEcommerce $mc_ecommerce */
    $mc_ecommerce = mailchimp_get_api_object('MailchimpEcommerce');
    return $mc_ecommerce->getStore($store_id);
  }
  catch (Exception $e) {
    watchdog('mailchimp_ecommerce', 'Unable to get store: %message', array(
      '%message' => $e->getMessage(),
    ), WATCHDOG_ERROR);
    drupal_set_message($e->getMessage(), 'error');
  }
}

function mailchimp_ecommerce_add_store($store_id, $list_id, $name, $currency_code) {
  try {
    /* @var \Mailchimp\MailchimpEcommerce $mc_ecommerce */
    $mc_ecommerce = mailchimp_get_api_object('MailchimpEcommerce');
    $mc_ecommerce->addStore($store_id, $list_id, $name, $currency_code);
  }
  catch (Exception $e) {
    watchdog('mailchimp_ecommerce', 'Unable to add a new store: %message', array(
      '%message' => $e->getMessage(),
    ), WATCHDOG_ERROR);
    drupal_set_message($e->getMessage(), 'error');
  }
}

function mailchimp_ecommerce_update_store($store_id, $list_id, $name, $currency_code) {
  try {
    /* @var \Mailchimp\MailchimpEcommerce $mc_ecommerce */
    $mc_ecommerce = mailchimp_get_api_object('MailchimpEcommerce');
    $mc_ecommerce->updateStore($store_id, $list_id, $name, $currency_code);
  }
  catch (Exception $e) {
    watchdog('mailchimp_ecommerce', 'Unable to update a store: %message', array(
      '%message' => $e->getMessage(),
    ), WATCHDOG_ERROR);
    drupal_set_message($e->getMessage(), 'error');
  }
}

function mailchimp_ecommerce_add_customer() {

}

function mailchimp_ecommerce_update_customer() {

}

function mailchimp_ecommerce_add_order() {

}

function mailchimp_ecommerce_update_order() {

}

function mailchimp_ecommerce_add_product() {

}

function mailchimp_ecommerce_update_product() {

}

function mailchimp_ecommerce_add_product_variant() {

}

function mailchimp_ecommerce_update_product_variant() {

}

/**
 * Generates a unique ID used to identify a store integration to MailChimp.
 *
 * @return string The unique store ID.
 */
function mailchimp_ecommerce_generate_store_id() {
  return uniqid();
}
