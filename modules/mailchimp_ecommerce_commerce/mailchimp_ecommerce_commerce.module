<?php

/**
 * @file
 * Integrates Drupal Commerce with MailChimp eCommerce.
 */

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mailchimp_ecommerce_commerce_form_mailchimp_ecommerce_admin_settings_alter(&$form, &$form_state) {
  $form['mailchimp_ecommerce_integration']['#options']['commerce'] = t('Drupal Commerce');

  // Add submit handler as first element in submit array.
  array_unshift($form['#submit'], 'mailchimp_ecommerce_commerce_integration_admin_settings_submit');
}

/**
 * Submit handler for the MailChimp eCommerce settings form.
 */
function mailchimp_ecommerce_commerce_integration_admin_settings_submit($form, &$form_state) {
  if (variable_get('mailchimp_ecommerce_store_id', NULL) == NULL) {
    $store_id = mailchimp_ecommerce_generate_store_id();
    variable_set('mailchimp_ecommerce_store_id', $store_id);
  }
}

/**
 * Implements hook_commerce_customer_profile_insert().
 */
function mailchimp_ecommerce_commerce_commerce_customer_profile_insert($customer_profile) {
  if (!mailchimp_ecommerce_is_enabled()) {
    return;
  }

  $user = user_load($customer_profile->uid);

  $customer_profile_wrapper = entity_metadata_wrapper('commerce_customer_profile', $customer_profile);

  $parameters = array(
    'first_name' => $customer_profile_wrapper->commerce_customer_address->first_name->value(),
    'last_name' => $customer_profile_wrapper->commerce_customer_address->last_name->value(),
    'address' => mailchimp_ecommerce_commerce_parse_customer_profile_address($customer_profile_wrapper),
  );

  mailchimp_ecommerce_add_customer($customer_profile->profile_id, $user->mail, $parameters);
}

/**
 * Implements hook_commerce_customer_profile_update().
 */
function mailchimp_ecommerce_commerce_commerce_customer_profile_update($customer_profile) {
  if (!mailchimp_ecommerce_is_enabled()) {
    return;
  }

  $user = user_load($customer_profile->uid);

  $customer_profile_wrapper = entity_metadata_wrapper('commerce_customer_profile', $customer_profile);

  $parameters = array(
    'first_name' => $customer_profile_wrapper->commerce_customer_address->first_name->value(),
    'last_name' => $customer_profile_wrapper->commerce_customer_address->last_name->value(),
    'address' => mailchimp_ecommerce_commerce_parse_customer_profile_address($customer_profile_wrapper),
  );

  mailchimp_ecommerce_update_customer($customer_profile->profile_id, $user->mail, $parameters);
}

/**
 * Implements hook_commerce_cart_order_refresh().
 */
function mailchimp_ecommerce_commerce_commerce_cart_order_refresh($order_wrapper) {

}

/**
 * Implements hook_commerce_checkout_complete().
 */
function mailchimp_ecommerce_commerce_commerce_checkout_complete($order) {

}

/**
 * Parses an address from a Commerce customer profile.
 *
 * @param object $customer_profile
 *   Commerce customer profile object.
 *
 * @return object
 *   Address object in a MailChimp-friendly format.
 */
function mailchimp_ecommerce_commerce_parse_customer_profile_address($customer_profile_wrapper) {
  $address = (object) array(
    'address1' => $customer_profile_wrapper->commerce_customer_address->thoroughfare->value(),
    'address2' => $customer_profile_wrapper->commerce_customer_address->premise->value(),
    'city' => $customer_profile_wrapper->commerce_customer_address->locality->value(),
    'province_code' => $customer_profile_wrapper->commerce_customer_address->administrative_area->value(),
    'postal_code' => $customer_profile_wrapper->commerce_customer_address->postal_code->value(),
    'country_code' => $customer_profile_wrapper->commerce_customer_address->country->value(),
  );

  return $address;
}
