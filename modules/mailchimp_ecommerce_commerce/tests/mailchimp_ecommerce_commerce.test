<?php
/**
 * @file
 * Test class and methods for the Mailchimp eCommerce commerce module.
 */

class MailchimpEcommerceCommerceTestCase extends DrupalWebTestCase {

  /**
   * Returns info displayed in the test interface.
   *
   * @return array
   *   Formatted as specified by simpletest.
   */
  public static function getInfo() {
    return array(
      'name' => 'MailChimp eCommerce commerce',
      'description' => 'Test MailChimp eCommerce commerce functionality.',
      'group' => 'MailChimp',
    );
  }

  /**
   * Pre-test setup function.
   *
   * Enables dependencies.
   * Sets the mailchimp_api_key to the test-mode key.
   * Sets test mode to TRUE.
   */
  protected function setUp() {
    $this->profile = drupal_get_profile();

    // Enable modules required for the test.
    $enabled_modules = array(
      'commerce',
      'entity',
      'libraries',
      'mailchimp',
      'mailchimp_ecommerce',
      'mailchimp_ecommerce_commerce'
    );

    $this->admin = $this->drupalCreateUser(array('administer site configuration', 'administer mailchimp'));
    $this->customer = $this->drupalCreateUser(array('anonymous user'));

    parent::setUp($enabled_modules);

    variable_set('mailchimp_api_key', 'MAILCHIMP_TEST_API_KEY');
    variable_set('mailchimp_test_mode', TRUE);
  }

  /**
   * Post-test function.
   *
   * Sets test mode to FALSE.
   */
  protected function tearDown() {
    parent::tearDown();

    variable_del('mailchimp_test_mode');
  }

  /**
   * Tests adding a store to MailChimp.
   */
  public function testAddStore() {
    // Should pass.
    $this->drupalLogin($this->admin);
    $this->drupalPost('admin/config/services/mailchimp/ecommerce', $edit, t('Save configuration'));
  }

  /**
   * Tests adding a store to MailChimp with no store ID.
   */
  public function testAddStoreNoId() {
    // Action should fail.
  }

  /**
   * Tests adding a customer to MailChimp.
   */
  public function testAddCustomer() {
    // Should pass.
  }

  /**
   * Tests adding a customer to MailChimp with no email address.
   */
  public function testAddCustomerNoEmail() {
    // Action should fail.
  }

  /**
   * Tests adding an order to MailChimp.
   */
  public function testAddOrder() {
    // Should pass.
  }

  /**
   * Tests adding an order to MailChimp with no line items.
   */
  public function testAddOrderNoLineItems() {
    // Action should fail.
  }

  /**
   * Tests adding a product to MailChimp.
   */
  public function testAddProduct() {
    // Should pass.
  }

  /**
   * Tests adding a product to MailChimp with no product variants.
   */
  public function testAddProductNoVariants() {
    // Action should fail.
  }

}
